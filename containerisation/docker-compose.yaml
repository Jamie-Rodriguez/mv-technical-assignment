version: '3.9'

services:
    database:
        container_name: database
        build:
            context: ../database/
            dockerfile: ../containerisation/database.dockerfile
        ports:
            - "${POSTGRES_PORT}:5432"
        healthcheck:
            test: ["CMD-SHELL", "pg_isready --dbname=${POSTGRES_DB} --username=${POSTGRES_USER}"]
            interval: 10s
            timeout: 5s
            retries: 5
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    server:
        container_name: server
        depends_on:
            database:
                condition: service_healthy
        build:
            context: ../server/
            dockerfile: ../containerisation/server.dockerfile
        ports:
            - "${SERVER_PORT}:5000" # Flask apps start on 5000 by default
        healthcheck:
            test: ["CMD", "curl", "http://server:${SERVER_PORT}/readyz"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 5s
        environment:
            POSTGRES_HOST: database
            POSTGRES_PORT: ${POSTGRES_PORT}
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
